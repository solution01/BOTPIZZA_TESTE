import type { INodeTypeDescription } from 'n8n-workflow';
import { z } from 'zod';
export declare function createNodeDetailsTool(nodeTypes: INodeTypeDescription[]): import("@langchain/core/tools").DynamicStructuredTool<z.ZodObject<{
    nodeName: z.ZodString;
    withParameters: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    withConnections: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    nodeName: string;
    withParameters: boolean;
    withConnections: boolean;
}, {
    nodeName: string;
    withParameters?: boolean | undefined;
    withConnections?: boolean | undefined;
}>, unknown, {
    nodeName: string;
    withParameters?: boolean | undefined;
    withConnections?: boolean | undefined;
}, import("@langchain/langgraph").Command<unknown>>;
