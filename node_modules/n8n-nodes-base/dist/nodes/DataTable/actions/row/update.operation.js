"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = exports.FIELD = void 0;
exports.execute = execute;
const n8n_workflow_1 = require("n8n-workflow");
const addRow_1 = require("../../common/addRow");
const selectMany_1 = require("../../common/selectMany");
const utils_1 = require("../../common/utils");
exports.FIELD = 'update';
const displayOptions = {
    show: {
        resource: ['row'],
        operation: [exports.FIELD],
    },
};
exports.description = [
    ...(0, selectMany_1.getSelectFields)(displayOptions),
    (0, addRow_1.makeAddRow)(exports.FIELD, displayOptions),
];
async function execute(index) {
    const dataStoreProxy = await (0, utils_1.getDataTableProxyExecute)(this, index);
    const row = (0, addRow_1.getAddRow)(this, index);
    const matches = await (0, selectMany_1.executeSelectMany)(this, index, dataStoreProxy, true);
    const result = [];
    for (const x of matches) {
        const updatedRows = await dataStoreProxy.updateRows({
            data: row,
            filter: { id: x.json.id },
        });
        if (updatedRows.length !== 1) {
            throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'invariant broken');
        }
        // The input object gets updated in the api call, somehow
        // And providing this column to the backend causes an unexpected column error
        // So let's just re-delete the field until we have a more aligned API
        delete row['updatedAt'];
        result.push(updatedRows[0]);
    }
    return result.map((json) => ({ json }));
}
//# sourceMappingURL=update.operation.js.map