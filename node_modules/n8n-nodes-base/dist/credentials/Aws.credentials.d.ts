import type { ICredentialDataDecryptedObject, ICredentialTestRequest, ICredentialType, IHttpRequestOptions, INodeProperties } from 'n8n-workflow';
export declare const regions: readonly [{
    readonly name: "af-south-1";
    readonly displayName: "Africa";
    readonly location: "Cape Town";
}, {
    readonly name: "ap-east-1";
    readonly displayName: "Asia Pacific";
    readonly location: "Hong Kong";
}, {
    readonly name: "ap-south-1";
    readonly displayName: "Asia Pacific";
    readonly location: "Mumbai";
}, {
    readonly name: "ap-south-2";
    readonly displayName: "Asia Pacific";
    readonly location: "Hyderabad";
}, {
    readonly name: "ap-southeast-1";
    readonly displayName: "Asia Pacific";
    readonly location: "Singapore";
}, {
    readonly name: "ap-southeast-2";
    readonly displayName: "Asia Pacific";
    readonly location: "Sydney";
}, {
    readonly name: "ap-southeast-3";
    readonly displayName: "Asia Pacific";
    readonly location: "Jakarta";
}, {
    readonly name: "ap-southeast-4";
    readonly displayName: "Asia Pacific";
    readonly location: "Melbourne";
}, {
    readonly name: "ap-southeast-5";
    readonly displayName: "Asia Pacific";
    readonly location: "Malaysia";
}, {
    readonly name: "ap-southeast-7";
    readonly displayName: "Asia Pacific";
    readonly location: "Thailand";
}, {
    readonly name: "ap-northeast-1";
    readonly displayName: "Asia Pacific";
    readonly location: "Tokyo";
}, {
    readonly name: "ap-northeast-2";
    readonly displayName: "Asia Pacific";
    readonly location: "Seoul";
}, {
    readonly name: "ap-northeast-3";
    readonly displayName: "Asia Pacific";
    readonly location: "Osaka";
}, {
    readonly name: "ca-central-1";
    readonly displayName: "Canada";
    readonly location: "Central";
}, {
    readonly name: "ca-west-1";
    readonly displayName: "Canada West";
    readonly location: "Calgary";
}, {
    readonly name: "cn-north-1";
    readonly displayName: "China";
    readonly location: "Beijing";
}, {
    readonly name: "cn-northwest-1";
    readonly displayName: "China";
    readonly location: "Ningxia";
}, {
    readonly name: "eu-central-1";
    readonly displayName: "Europe";
    readonly location: "Frankfurt";
}, {
    readonly name: "eu-central-2";
    readonly displayName: "Europe";
    readonly location: "Zurich";
}, {
    readonly name: "eu-north-1";
    readonly displayName: "Europe";
    readonly location: "Stockholm";
}, {
    readonly name: "eu-south-1";
    readonly displayName: "Europe";
    readonly location: "Milan";
}, {
    readonly name: "eu-south-2";
    readonly displayName: "Europe";
    readonly location: "Spain";
}, {
    readonly name: "eu-west-1";
    readonly displayName: "Europe";
    readonly location: "Ireland";
}, {
    readonly name: "eu-west-2";
    readonly displayName: "Europe";
    readonly location: "London";
}, {
    readonly name: "eu-west-3";
    readonly displayName: "Europe";
    readonly location: "Paris";
}, {
    readonly name: "il-central-1";
    readonly displayName: "Israel";
    readonly location: "Tel Aviv";
}, {
    readonly name: "me-central-1";
    readonly displayName: "Middle East";
    readonly location: "UAE";
}, {
    readonly name: "me-south-1";
    readonly displayName: "Middle East";
    readonly location: "Bahrain";
}, {
    readonly name: "mx-central-1";
    readonly displayName: "Mexico";
    readonly location: "Central";
}, {
    readonly name: "sa-east-1";
    readonly displayName: "South America";
    readonly location: "SÃ£o Paulo";
}, {
    readonly name: "us-east-1";
    readonly displayName: "US East";
    readonly location: "N. Virginia";
}, {
    readonly name: "us-east-2";
    readonly displayName: "US East";
    readonly location: "Ohio";
}, {
    readonly name: "us-gov-east-1";
    readonly displayName: "US East";
    readonly location: "GovCloud";
}, {
    readonly name: "us-west-1";
    readonly displayName: "US West";
    readonly location: "N. California";
}, {
    readonly name: "us-west-2";
    readonly displayName: "US West";
    readonly location: "Oregon";
}, {
    readonly name: "us-gov-west-1";
    readonly displayName: "US West";
    readonly location: "GovCloud";
}];
export type AWSRegion = (typeof regions)[number]['name'];
export type AwsCredentialsType = {
    region: AWSRegion;
    accessKeyId: string;
    secretAccessKey: string;
    temporaryCredentials: boolean;
    customEndpoints: boolean;
    sessionToken?: string;
    rekognitionEndpoint?: string;
    lambdaEndpoint?: string;
    snsEndpoint?: string;
    sesEndpoint?: string;
    sqsEndpoint?: string;
    s3Endpoint?: string;
    ssmEndpoint?: string;
};
export declare class Aws implements ICredentialType {
    name: string;
    displayName: string;
    documentationUrl: string;
    icon: {
        readonly light: "file:icons/AWS.svg";
        readonly dark: "file:icons/AWS.dark.svg";
    };
    properties: INodeProperties[];
    authenticate(rawCredentials: ICredentialDataDecryptedObject, requestOptions: IHttpRequestOptions): Promise<IHttpRequestOptions>;
    test: ICredentialTestRequest;
}
//# sourceMappingURL=Aws.credentials.d.ts.map